@model List<ShelterManagerRedux.Models.ShelterLocation>
@{
    ViewData["Title"] = "ClientView";


}

<h1>Partnered Shelter</h1>
<div class="container">
    <div class="accordion-headers">
        <div>Shelter</div>
        <div>Available Room</div>
        <div>Shown Interest</div>
    </div>
@foreach (ShelterLocation v in Model)
{
        
            
            <div class="accordion">
                <div class="accordion-item">
                    <input type="radio" name="accordion" id="section1">
                    <label class="accordion-title" for="section1">
                        <span>@v.Shelter_Location_Description</span>
                        <span>@v.Shelter_Location_Available_Room/@v.Shelter_Location_Total_Room</span>
                        <span>@v.Shelter_Location_ShownInterest/@v.Shelter_Location_Available_Room</span>
                    </label>
                    <div class="accordion-content">
                    <form asp-controller="ClientView" asp-action="ShowInterest">
                        <label>First Name:</label><input id="clientfName" name="fName" placeholder="First Name" />
                        <label>Last Name:</label><input id="clientlName" name="lName" placeholder="Last Name" />
                    
                        <input type="hidden" name="shelterID" value="@v.Shelter_Location_ID" />
                        <input type="submit" value="Show Interest" />
                    </form>
                    </div>
            </div>


        </div>
}
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const accordionItems = document.querySelectorAll('.accordion-item');
        const accordionTitles = document.querySelectorAll('.accordion-title');

        accordionTitles.forEach(title => {
            title.addEventListener('click', () => {
                const item = title.parentElement;
                if (!item.classList.contains('active')) {
                    accordionItems.forEach(otherItem => {
                        if (otherItem !== item) {
                            otherItem.classList.remove('active');
                            otherItem.querySelector('.accordion-content').style.display = 'none';
                        }
                    });
                    item.classList.add('active');
                    item.querySelector('.accordion-content').style.display = 'block';
                }
            });
        });
    });
</script>

@if (ViewData["ShownInterestIn"] != null)
{
    <script>
        window.onload = function ()
        {
            alert('@Html.Raw(ViewData["ShownInterestIn"])');
        }
    </script>
}

@if (ViewData["ErrorMessage"] != null)
{
    <script>
        window.onload = function () {
            alert('@Html.Raw(ViewData["ErrorMessage"])');
        };
    </script>
}
